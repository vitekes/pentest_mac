import subprocess
import random
import argparse
import re


class NetworkTools():
    def change_mac(self, interface, mac_address=""):
        subprocess.call("ifconfig {} down".format(interface), shell=True)
        if not mac_address:
            subprocess.call("ifconfig {0} hw ether {1}".format(interface, self.generate_mac()), shell=True)
        else:
            if re.match("[0-9a-f]{2}([-:]?)[0-9a-f]{2}(\\1[0-9a-f]{2}){4}$", mac_address.lower()):
                subprocess.call("ifconfig {0} hw ether {1}".format(interface, mac_address, shell=True))
            else:
                raise Exception("incorrect mac address")
        subprocess.call("ifconfig {} up".format(interface), shell=True)

    @staticmethod
    def generate_mac():
        return "02:00:00:%02x:%02x:%02x" % (random.randint(0, 255),
                                            random.randint(0, 255),
                                            random.randint(0, 255))

    @staticmethod
    def arguments():
        parser = argparse.ArgumentParser()
        parser.add_argument("-i", "--interface", dest="interface_name", help=" change mac address")
        parser.add_argument("-m", "--mac", dest="mac_address", help="Add mac address manually")
        return parser.parse_args()


if __name__ == '__main__':
    tools = NetworkTools()
    args = tools.arguments()
    tools.change_mac(interface=args.interface_name, mac_address=args.mac_address)
